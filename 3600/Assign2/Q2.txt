Ansewr2

int shortest_transit_path(G, S, I, F, x, y):
    min_path= infinity
    for each i in I:
        x_to_i = SP(G, x, i) 
        i_to_y = SP(G, i, y) 
        path_length = x_to_i + i_to_y
        if path_length < min_path:
            min_path = path_length
    return min_path

    


TIME COMPLEXITY  will depend on time COMPLEXITY of SP()..
Assuming time COMPLEXITY of SP() is constant then of Algorithm it is O(n)

n=Size(I)
Parametrized time COMPLEXITY will be (n-1)(2T(SP)+2)+2

 asymptotic worst- case parameterized time complexity for that algorithm is O(n*T(SP)) where is time complexity
 of SP() function.